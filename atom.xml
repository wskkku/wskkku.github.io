<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://wskkku.github.io</id>
    <title>RoKey! RoKey!</title>
    <updated>2021-02-19T14:23:47.300Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://wskkku.github.io"/>
    <link rel="self" href="https://wskkku.github.io/atom.xml"/>
    <subtitle>新年快乐</subtitle>
    <logo>https://wskkku.github.io/images/avatar.png</logo>
    <icon>https://wskkku.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, RoKey! RoKey!</rights>
    <entry>
        <title type="html"><![CDATA[HTML<移动端基础/>]]></title>
        <id>https://wskkku.github.io/post/htmllessgreateryi-dong-duan/</id>
        <link href="https://wskkku.github.io/post/htmllessgreateryi-dong-duan/">
        </link>
        <updated>2021-02-18T10:39:10.000Z</updated>
        <summary type="html"><![CDATA[<p>移动端基础</p>
]]></summary>
        <content type="html"><![CDATA[<p>移动端基础</p>
<!-- more -->
<pre><code>&lt;meta name=&quot;viewport&quot;
        content=&quot;width=device-width, initial-scale=1.0,maximum-scale=1.0,minimum-scale=1.0,user-scalable=no&quot;&gt;
        content=&quot;宽度设置，初始缩放比，最大缩放比，最小缩放比，用户是否可以缩放&quot;
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[HTML+CSS<按钮风格/>]]></title>
        <id>https://wskkku.github.io/post/htmllessgreater/</id>
        <link href="https://wskkku.github.io/post/htmllessgreater/">
        </link>
        <updated>2021-02-17T04:37:43.000Z</updated>
        <summary type="html"><![CDATA[<p>HTML按钮风格</p>
]]></summary>
        <content type="html"><![CDATA[<p>HTML按钮风格</p>
<!-- more -->
<h2 id="1赛博朋克风格按钮">1.赛博朋克风格按钮</h2>
 <div class="templet-inner">
    <div class="cyber-button">
         <button>AVAILABLE NOW</button>
    </div>
 </div>
<p><strong>html</strong></p>
<pre><code>&lt;button&gt;AVAILABLE NOW&lt;/button&gt;
</code></pre>
<p><strong>css</strong></p>
<pre><code>body {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 20vh;
    background-color: #F8F005;
}

button, button::after {
    width: 380px;
    height: 86px;
    font-size: 36px;
    background: linear-gradient(45deg, transparent 5%, #FF013C 5%);
    border: 0;
    color: #fff;
    letter-spacing: 3px;
    line-height: 88px;
    box-shadow: 6px 0px 0px #00E6F6;
    outline: transparent;
    position: relative;
}

button::after {
    --slice-0: inset(50% 50% 50% 50%);
    --slice-1: inset(80% -6px 0 0);
    --slice-2: inset(50% -6px 30% 0);
    --slice-3: inset(10% -6px 85% 0);
    --slice-4: inset(40% -6px 43% 0);
    --slice-5: inset(80% -6px 5% 0);
    content: 'AVAILABLE NOW';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 3%, #00E6F6 3%, #00E6F6 5%, #FF013C 5%);
    text-shadow: -3px -3px 0px #F8F005, 3px 3px 0px #00E6F6;
    clip-path: var(--slice-0);
}

button:hover::after {
    animation: 1s glitch;
    animation-timing-function: steps(2, end);
}

@keyframes glitch {
    0% {
        clip-path: var(--slice-1);
        transform: translate(-20px, -10px);
    }
    10% {
        clip-path: var(--slice-3);
        transform: translate(10px, 10px);
    }
    20% {
        clip-path: var(--slice-1);
        transform: translate(-10px, 10px);
    }
    30% {
        clip-path: var(--slice-3);
        transform: translate(0px, 5px);
    }
    40% {
        clip-path: var(--slice-2);
        transform: translate(-5px, 0px);
    }
    50% {
        clip-path: var(--slice-3);
        transform: translate(5px, 0px);
    }
    60% {
        clip-path: var(--slice-4);
        transform: translate(5px, 10px);
    }
    70% {
        clip-path: var(--slice-2);
        transform: translate(-10px, 10px);
    }
    80% {
        clip-path: var(--slice-5);
        transform: translate(20px, -10px);
    }
    90% {
        clip-path: var(--slice-1);
        transform: translate(-10px, 0px);
    }
    100% {
        clip-path: var(--slice-1);
        transform: translate(0);
    }
}
</code></pre>
<h2 id="2ios开关">2.ios开关</h2>
<div class="templet">
    <div class="templet-inner">
        <div class="ios-button">
            <label for="toggle" style="cursor: pointer;" >
                <input type="checkbox" id="toggle">
                <span></span>
            </label>
        </div>
    </div>
</div>
<!-- more -->
<p><strong>html</strong></p>
<pre><code>&lt;label for=&quot;toggle&quot;&gt;
  &lt;input type=&quot;checkbox&quot; id=&quot;toggle&quot;&gt;
  &lt;span&gt;&lt;/span&gt;
&lt;/label&gt;
</code></pre>
<p><strong>css</strong></p>
<pre><code>:root {
  --button-width: 500px;
  --button-height: 295px;
  --toggle-diameter: 255px;
  --button-toggle-offset: calc((var(--button-height) - var(--toggle-diameter)) / 2);
  --toggle-shadow-offset: 10px;
  --toggle-wider: 333px;
  --color-grey: #E9E9E9;
  --color-dark-grey: #39393D;
  --color-green: #30D158;
}

span {
  display: inline-block;
  width: var(--button-width);
  height: var(--button-height);
  background-color: var(--color-grey);
  border-radius: calc(var(--button-height) / 2);
  position: relative;
  transition: .3s all ease-in-out;
}

span::after {
  content: '';
  display: inline-block;
  width: var(--toggle-diameter);
  height: var(--toggle-diameter);
  background-color: #fff;
  border-radius: calc(var(--toggle-diameter) / 2);
  position: absolute;
  top: var(--button-toggle-offset);
  transform: translateX(var(--button-toggle-offset));
  box-shadow: var(--toggle-shadow-offset) 0 calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, .10);
  transition: .3s all ease-in-out;
}

body {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
}

input[type=&quot;checkbox&quot;]:checked + span {
  background-color: var(--color-green);
}

input[type=&quot;checkbox&quot;]:checked + span::after {
  transform: translateX(calc(var(--button-width) - var(--toggle-diameter) - var(--button-toggle-offset)));
  box-shadow: calc(var(--toggle-shadow-offset) * -1) 0 calc(var(--toggle-shadow-offset) * 4) rgba(0, 0, 0, .10);
}

input[type=&quot;checkbox&quot;] {
  display: none;
}

input[type=&quot;checkbox&quot;]:active + span::after {
  width: var(--toggle-wider);
}

input[type=&quot;checkbox&quot;]:checked:active + span::after {
  transform: translateX(calc(var(--button-width) - var(--toggle-wider) - var(--button-toggle-offset)));
}

@media(prefers-color-scheme: dark) {
  body {
    background-color: #1C1C1E;
  }
  
  span {
    background-color: var(--color-dark-grey);
  }
}
</code></pre>
<h2 id="3分裂文字效果">3.分裂文字效果</h2>
<div class="templet-inner">
    <div class="ftext-button">
    <div class="a">
        <div class="b" style="--i:-30">ROI</div>
        <div class="c" style="--i:30">ROI</div>
        <a href="#" class="d">关注/follow</a>
    </div>
   </div>
 </div>
<!-- more -->
<p><strong>html</strong></p>
<pre><code>&lt;div class=&quot;a&quot;&gt;
    &lt;div class=&quot;b&quot; style=&quot;--i:-30&quot;&gt;ROI&lt;/div&gt;
    &lt;div class=&quot;c&quot; style=&quot;--i:30&quot;&gt;ROI&lt;/div&gt;
    &lt;a href=&quot;#&quot; class=&quot;d&quot;&gt;关注/follow&lt;/a&gt;
&lt;/div&gt;
</code></pre>
<p><strong>css</strong></p>
<pre><code>body {
    background-color: rgb(189, 207, 255);
    display: flex;
    justify-content: center;
}

.a {
    position: relative;
    /* top: 250px; */
    width: 300px;
    display: flex;
    justify-content: center;
    margin: 0 30px;
}

 .c,  .b {
    font: 900 100px '';
    line-height: 150px;
    position: absolute;
    color: brown;
    top: 0;
    /* 使文字上下移动时有0.4s的过渡效果 */
    transition: .4s;
}

.c {
    /* 裁剪文字的上半部分，括号里的四个值分别是
    top，right，bottom，left */
    clip-path: inset(49% 0 0 0);
}

.b {
    /* 裁剪文字的下半部分 */
    clip-path: inset(1% 0 50% 0);
}

.a:hover .b,  .a:hover .c {
    /* 让--i为30的向上移动30px，-30的向下移动30px
    这样子就能空出60px留给中间的超链接 */
    top: calc(var(--i)*1px);
}

.a:hover .d {
    opacity: 1;
}

.d {
    text-decoration: none;
    color: cyan;
    font: 600 30px '';
    line-height: 150px;
    opacity: 0;
    transition: .3s;
}
</code></pre>
<h2 id="4流光溢彩">4.流光溢彩</h2>
<div class="templet-inner">
    <div class="button-streamer">
        <a href="javascript:;">START</a>
    </div>
</div>
<!-- more -->
<p>html</p>
<pre><code>&lt;a&gt;START&lt;/a&gt;
</code></pre>
<p>css</p>
<pre><code>@keyframes button-streamer {
    100% {
        background-position: -400% 0;
    }
}

body {
    position        : relative;
    background-color: rgb(17, 17, 17);
    width           : 100%;
    height          : 200px;
}

a {
    text-decoration: none;
    position       : absolute;
    left           : 50%;
    top            : 50%;
    transform      : translate(-50%, -50%);
    font-size      : 24px;
    background     : linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b, #03a9f4);
    background-size: 400%;
    width          : 400px;
    height         : 100px;
    line-height    : 100px;
    text-align     : center;
    color          : white;
    text-transform : uppercase;
    border-radius  : 50px;
    z-index        : 1;
    animation      : button-streamer 8s infinite;
}

a::before {
    content        : &quot;&quot;;
    position       : absolute;
    left           : -5px;
    right          : -5px;
    bottom         : -5px;
    top            : -5px;
    background     : linear-gradient(90deg, #03a9f4, #f441a5, #ffeb3b,#03a9f4;
    background-size: 400%;
    border-radius  : 50px;
    filter         : blur(20px);
    z-index        : -1;
    animation      : button-streamer 8s infinite;
}

a:hover::before {
    animation: button-streamer 4s infinite;
}

a:hover {
    animation: button-streamer 4s infinite;
}
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Python</>]]></title>
        <id>https://wskkku.github.io/post/pythonlessgreater/</id>
        <link href="https://wskkku.github.io/post/pythonlessgreater/">
        </link>
        <updated>2021-02-16T14:27:16.000Z</updated>
        <summary type="html"><![CDATA[<p>Python基础</p>
]]></summary>
        <content type="html"><![CDATA[<p>Python基础</p>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[JavaScript</>]]></title>
        <id>https://wskkku.github.io/post/ghj-de-feng-ge-he-feng-ge-he-feng-ge-he-feng-ge-he-feng-ge-he-feng-ge-he/</id>
        <link href="https://wskkku.github.io/post/ghj-de-feng-ge-he-feng-ge-he-feng-ge-he-feng-ge-he-feng-ge-he-feng-ge-he/">
        </link>
        <updated>2021-02-16T09:02:06.000Z</updated>
        <summary type="html"><![CDATA[<p>JavaScript基础</p>
]]></summary>
        <content type="html"><![CDATA[<p>JavaScript基础</p>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[C++</>]]></title>
        <id>https://wskkku.github.io/post/hello-gridea/</id>
        <link href="https://wskkku.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>C++基础</p>
]]></summary>
        <content type="html"><![CDATA[<p>C++基础</p>
<!-- more -->
]]></content>
    </entry>
</feed>